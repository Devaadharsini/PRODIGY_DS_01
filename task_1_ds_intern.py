# -*- coding: utf-8 -*-
"""TASK 1 DS INTERN

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PPxKQUfqH8K9ZNnMc57QbgQwte4a85ZG

**TASK -1 : Create a bar chart or histogram to visualize the distribution of a categorical or continuous variable, such as the distribution of ages or genders in a population.**

**IMPORTING REQUIRED PACKAGES**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""**LOADING CUSTOMERS.CSV DATASET FOR TASK 1**"""

data=pd.read_csv('Customers.csv')
print(data.head())

"""**CONVERTING DATASET INTO DATAFRAME**"""

df=pd.DataFrame(data)
df

"""**NO OF ROWS**"""

len(df)#count of rows

"""**BEFORE VISUALIZING THE DISTRIBUTION OF CATEGORICAL AND CONTINUOUS VARIABLE , DROPPING NULL VALUES IF ANY**"""

df.dropna()

"""**CREATED A HISTOGRAM TO VISUALIZE THE DISTRIBUTION OF A CONTINUOUS VARIABLE, AGE AND ANNUAL INCOME IN CUSTOMERS.CSV.**


"""

bin_val=30
x=df['Age']
plt.figure(figsize=[14,5])

n, bins, patches = plt.hist(x, bins=bin_val, color='yellowgreen', edgecolor='black')



# Annotate the bars with values
for count, bin in zip(n, bins):
    plt.text(bin, count, str(int(count)), fontsize=10, va='bottom', ha='left', rotation=360)
plt.title('DISTRIBUTION OF AGE')

plt.xlabel('Age')
plt.ylabel('frequency')
plt.show()

bin_val=30
x=df['Annual Income ($)']
plt.figure(figsize=[14,5])

n, bins, patches = plt.hist(x, bins=bin_val, color='palevioletred', edgecolor='black')



# Annotate the bars with values
for count, bin in zip(n, bins):
    plt.text(bin, count, str(int(count)), fontsize=10, va='bottom', ha='left', rotation=360)
plt.title('DISTRIBUTION OF ANNUAL INCOME ')

plt.xlabel('Annual Income ($)')
plt.ylabel('frequency')
plt.show()

"""**CREATED A BAR CHART TO VISUALIZE THE DISTRIBUTION OF A CATEGORICAL VARIABLE, GENDER AND PROFESSION IN CUSTOMERS.CSV.**


"""

info=df['Gender'].value_counts()
print(info)

print('\n')

info.plot(kind='bar',color=['mistyrose','lightblue'],edgecolor='black')
plt.title('DISTRIBUTION OF GENDER')
plt.xlabel('Gender')
plt.ylabel('frequency')
for index,row_count in enumerate(info):
  plt.text(index,row_count,str(int(row_count)),color='black',va='bottom',ha='center')
plt.show()

prof=df['Profession'].value_counts().reset_index()
prof.columns=['Profession','Count']


plt.figure(figsize=(12,5))
sns.barplot(data=prof,x='Profession',y='Count',edgecolor='black',hue='Profession',palette='cubehelix')
plt.title('DISTRIBUTION OF PROFESSION')
plt.xlabel('Profession')
plt.ylabel('Counts')
plt.show()